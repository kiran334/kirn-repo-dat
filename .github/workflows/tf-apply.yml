
# name: "Terraform-Apply-Infra-Release"

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     name: "Terraform"
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

#       - name: Terraform Init
#         id: init
#         run: terraform init

#       - name: Terraform Plan
#         id: plan
#         if: github.event_name == 'push'
#         run: terraform plan -no-color
#         continue-on-error: true

#       - name: Terraform Plan Status
#         if: steps.plan.outcome == 'failure'
#         run: exit 1

#       - name: Terraform Apply
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: terraform apply -auto-approve
      
#       # - name: Terraform Destroy
#       #   if: github.event_name == 'delete'
#       #   run: terraform destroy -auto-approve


name: "Terraform-Apply-Infra-Release"

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: List Contents
        run: ls -R

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Plan Linux VM
        run: |
          cd ./Linux
          terraform init
          terraform plan -out=tfplan -no-color
          # Add terraform apply or other necessary commands based on your workflow

      - name: Deploy Linux VM
        if: success()
        run: |
          cd ./Linux
          terraform apply -auto-approve tfplan
          # Add any additional steps or commands needed after apply

